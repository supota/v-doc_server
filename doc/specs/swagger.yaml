swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "V-Doc. API"
  termsOfService: "https://legal.supota.com"
host: "api.v-doc.supota.com"
basePath: "/v1"
tags:
- name: "player"
  description: "Operations about player"
schemes:
- "https"
- "http"
paths:
  /player:
    post:
      tags:
      - "player"
      summary: "Create player"
      description: "This can only be done by the logged in player."
      operationId: "createPlayer"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created player object"
        required: true
        schema:
          $ref: "#/definitions/Player"
      responses:
        default:
          description: "successful operation"
  /player/{_id}:
    get:
      tags:
      - "player"
      summary: "Get player by player ID"
      description: ""
      operationId: "getPlayerById"
      produces:
      - "application/json"
      parameters:
      - name: "_id"
        in: "path"
        type: "integer"
        format: "int64"
        required: true
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Player"
        400:
          description: "Invalid playerId supplied"
        404:
          description: "Player not found"
    put:
      tags:
      - "player"
      summary: "Updated player"
      description: "This can only be done by the logged in player."
      operationId: "updatePlayer"
      produces:
      - "application/json"
      parameters:
      - name: "_id"
        in: "path"
        description: "name that need to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated player object"
        required: true
        schema:
          $ref: "#/definitions/Player"
      responses:
        400:
          description: "Invalid player supplied"
        404:
          description: "Player not found"
    delete:
      tags:
      - "player"
      summary: "Delete player"
      description: "This can only be done by the logged in player."
      operationId: "deletePlayer"
      produces:
      - "application/json"
      parameters:
      - name: "_id"
        in: "path"
        description: "The id that needs to be deleted"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid playerId supplied"
        404:
          description: "Player not found"
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Player:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
    xml:
      name: "Player"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
